<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>coroutines on gmetal&#39;s dev blog</title>
    <link>https://gmetal.dev/tags/coroutines/</link>
    <description>Recent content in coroutines on gmetal&#39;s dev blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Wed, 03 Nov 2021 08:01:49 +0000</lastBuildDate><atom:link href="https://gmetal.dev/tags/coroutines/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Unit Testing WithTimeout in Coroutines With Kotest</title>
      <link>https://gmetal.dev/posts/unit-testing-withtimeout-with-kotest/</link>
      <pubDate>Wed, 03 Nov 2021 08:01:49 +0000</pubDate>
      
      <guid>https://gmetal.dev/posts/unit-testing-withtimeout-with-kotest/</guid>
      <description>Sometimes you may be required to implement code that executes periodic actions. In Java, you can implement such a feature using a Timer. Kotlin also provided a wrapper for this, using the fixedRateTimer function. The above mentioned method of creating a timer is old-style, thread-based and JVM specific. Coroutines offer a better solution for solving this problem, in a more lightweight, efficient and cross-platform manner. One such more-kotlin styled approach, is provided by the ticker, which is part of the Channels API.</description>
    </item>
    
  </channel>
</rss>
